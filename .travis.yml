# The OS X Build Environment
# https://docs.travis-ci.com/user/reference/osx/#Xcode-version

language: objective-c
xcode_project: GRDB.xcodeproj

# Disable the default Travis-CI submodule logic
# The various make commands ensure that the appropriate submodules are retrieved
git:
  submodules: false

jobs:
  include:

    ###########################################
    ## Test GRDB

    # Test GRDBOSX (Xcode 9.2)
    - stage: Test GRDB
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBOSX (Xcode 9.2, macOS)
      script: make test_framework_GRDBOSX

    # Test GRDBWatchOS (Xcode 9.2)
    - stage: Test GRDB
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBWatchOS (Xcode 9.2, watchOS)
      script: make test_framework_GRDBWatchOS

    # Test GRDBiOS (Xcode 9.2, iOS <MAXIMUM VERSION>)
    - stage: Test GRDB
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBiOS (Xcode 9.2, iOS <MAX>)
      script: make test_framework_GRDBiOS_maxTarget

    # Test GRDBiOS (Xcode 9.2, iOS <MINIMUM VERSION>))
    - stage: Test GRDB
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBiOS (Xcode 9.2, iOS <MIN>)
      script: make test_framework_GRDBiOS_minTarget

    # Test GRDB [SPM] (Xcode 9.2, macOS)
    - stage: Test GRDB
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDB [SPM] (Xcode 9.2, macOS)
      script: make test_SPM

    ###########################################
    ## Test GRDB (Custom SQLite)

    # Test GRDBCustomSQLiteOSX (Xcode 9.2)
    - stage: Test GRDB + Custom SQLite
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBCustomSQLiteOSX (Xcode 9.2, macOS)
      script: make test_framework_GRDBCustomSQLiteOSX

    # Test GRDBCustomSQLiteiOS (Xcode 9.2, iOS <MAXIMUM VERSION>)
    - stage: Test GRDB + Custom SQLite
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBCustomSQLiteiOS (Xcode 9.2, iOS <MAX>)
      script: make test_framework_GRDBCustomSQLiteiOS_maxTarget

    # Test GRDBCustomSQLiteiOS (Xcode 9.2, iOS <MINIMUM VERSION>))
    - stage: Test GRDB + Custom SQLite
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBCustomSQLiteiOS (Xcode 9.2, iOS <MIN>)
      script: make test_framework_GRDBCustomSQLiteiOS_minTarget

    ###########################################
    ## Test GRDB (SQLCipher)

    # Test GRDBCipherOSX (Xcode 9.2)
    - stage: Test GRDB + SQLCipher
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBCipherOSX (Xcode 9.2, macOS)
      script: make test_framework_GRDBCipherOSX

    # Test GRDBCipheriOS (Xcode 9.2, iOS <MAXIMUM VERSION>)
    - stage: Test GRDB + SQLCipher
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBCipheriOS (Xcode 9.2, iOS <MAX>)
      script: make test_framework_GRDBCipheriOS_maxTarget

    # Test GRDBCipheriOS (Xcode 9.2, iOS <MINIMUM VERSION>))
    - stage: Test GRDB + SQLCipher
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=GRDBCipheriOS (Xcode 9.2, iOS <MIN>)
      script: make test_framework_GRDBCipheriOS_minTarget


    ###########################################
    ## Test Minimum Supported Xcode

    # Test GRDBiOS (Xcode 9.0, iOS <MAXIMUM VERSION>)
    - stage: Test Minimum Xcode
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.0
      env:
        - TID=GRDBiOS (Xcode 9.0, iOS <MAX>)
      script: make test_framework_GRDBiOS_maxTarget

    # Test GRDBiOS (Xcode 9.0, iOS <MINIMUM VERSION>))
    - stage: Test Minimum Xcode
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.0
      env:
        - TID=GRDBiOS (Xcode 9.0, iOS <MIN>)
      script: make test_framework_GRDBiOS_minTarget

    # Test GRDBCustomSQLiteiOS (Xcode 9.0, iOS <MAXIMUM VERSION>)
    - stage: Test Minimum Xcode
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.0
      env:
        - TID=GRDBCustomSQLiteiOS (Xcode 9.0, iOS <MAX>)
      script: make test_framework_GRDBCustomSQLiteiOS_maxTarget

    # Test GRDBCipheriOS (Xcode 9.0, iOS <MAXIMUM VERSION>)
    - stage: Test Minimum Xcode
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.0
      env:
        - TID=GRDBCipheriOS (Xcode 9.0, iOS <MAX>)
      script: make test_framework_GRDBCipheriOS_maxTarget


    ###########################################
    ## Test Installation Methods

    # Manual Install
    - stage: Test Installation
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=Manual Install
      script: make test_install_manual

    # Manual Install (GRDBCipher)
    - stage: Test Installation
      gemfile: .ci/gemfiles/Gemfile.travis
      osx_image: xcode9.2
      env:
        - TID=Manual Install (GRDBCipher)
      script: make test_install_GRDBCipher

    # Cocoapods Lint
    - stage: Test Installation
      osx_image: xcode9.2
      install:
        - gem install cocoapods # Since Travis is not always on latest version
      env:
        - TID=Cocoapods
      script: make test_CocoaPodsLint

    # SPM Install
    - stage: Test Installation
      osx_image: xcode9.2
      env:
        - TID=SPM
      script: make test_install_SPM

    ## Carthage Build
    ## Commented out until `make test_CarthageBuild` performs *reliably*.
    ## See https://github.com/groue/GRDB.swift/pull/262
    # - stage: Test Installation
    #   osx_image: xcode9.2
    #   before_install:
    #     - brew update
    #     - brew outdated carthage || brew upgrade carthage
    #   env:
    #     - TID=Carthages
    #   script: make test_CarthageBuild
